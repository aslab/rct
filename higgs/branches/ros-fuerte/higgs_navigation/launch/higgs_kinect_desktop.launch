<launch>
		 
	
  		<!-- kinect perception -->
	  
	<node pkg="nodelet" type="nodelet" name="openni_manager" output="screen" respawn="true" args="manager"/>

  <!-- throttling -->
  <node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_manager" output="screen" >
    <param name="max_rate" value="2.0"/>
    <remap from="cloud_in" to="camera/depth_registered/points"/>
    <remap from="cloud_out" to="cloud_throttled"/>
  </node>
  
  <!-- Fake Laser for costmap Wide -->
  <node pkg="nodelet" type="nodelet" name="kinect_wide_scan" args="load pointcloud_to_laserscan/CloudToScan openni_manager" respawn="true" >
    <param name="output_frame_id" value="/openni_depth_frame"/>
    <!-- heights are in the (optical?) frame of the kinect -->
    <param name="min_height" value="-0.15"/>
    <param name="max_height" value="0.15"/>
    <remap from="cloud" to="cloud_throttled"/>
    <remap from="scan" to="kinect_wide_scan"/>
  </node>
  
  <node pkg="openni_camera" type="openni_node" name="openni_node1" output="screen"> <!-- launch-prefix="$(arg launch_prefix) -->
    <!--param name="topic" value="first" /-->
    <!--param name="device_id" value="5@1"/--> <!-- this line uses device on usb bus 2 and addres 3 -->
    <!--param name="device_id" value="B00367707227042B"/--> <!-- this line uses device with given serial number -->
    
    <param name="device_id" value="#1"/> <!-- this line uses first enumerated device -->
    <!--<rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" /> -->
    <param name="rgb_frame_id" value="/openni_rgb_optical_frame" />
    <param name="depth_frame_id" value="/openni_depth_optical_frame" />
    <param name="use_indices" value="false" />remote
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="2" />
    <param name="depth_mode" value="2" />
    <param name="debayering" value="2" />
    <param name="depth_time_offset" value="0" />
    <param name="image_time_offset" value="0" />
  </node>
  
  <!-- frames for kinect -->
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link" args="0 -0.02 0 0 0 0  /openni_camera /openni_depth_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link1" args="0 -0.04 0 0 0 0  /openni_camera /openni_rgb_frame 100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link2" args="0 0 0 -1.57 0 -1.57 /openni_depth_frame /openni_depth_optical_frame  100" />  
  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link3" args="0 0 0 -1.57 0 -1.57 /openni_rgb_frame /openni_rgb_optical_frame 100" />
  
</launch>
