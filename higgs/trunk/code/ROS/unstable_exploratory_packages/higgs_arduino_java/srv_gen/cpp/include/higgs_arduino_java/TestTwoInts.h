/* Auto-generated by genmsg_cpp for file /usr/local/ros_aslab/higgs_arduino_java/srv/TestTwoInts.srv */
#ifndef HIGGS_ARDUINO_JAVA_SERVICE_TESTTWOINTS_H
#define HIGGS_ARDUINO_JAVA_SERVICE_TESTTWOINTS_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace higgs_arduino_java
{
template <class ContainerAllocator>
struct TestTwoIntsRequest_ : public ros::Message
{
  typedef TestTwoIntsRequest_<ContainerAllocator> Type;

  TestTwoIntsRequest_()
  : a(0)
  , b(0)
  {
  }

  TestTwoIntsRequest_(const ContainerAllocator& _alloc)
  : a(0)
  , b(0)
  {
  }

  typedef int32_t _a_type;
  int32_t a;

  typedef int32_t _b_type;
  int32_t b;


private:
  static const char* __s_getDataType_() { return "higgs_arduino_java/TestTwoIntsRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "ef8322123148e475e3e93a1f609b2f70"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "f0b6d69ea10b0cf210cb349d58d59e8f"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int32 a\n\
int32 b\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, a);
    ros::serialization::serialize(stream, b);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, a);
    ros::serialization::deserialize(stream, b);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(a);
    size += ros::serialization::serializationLength(b);
    return size;
  }

  typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct TestTwoIntsRequest
typedef  ::higgs_arduino_java::TestTwoIntsRequest_<std::allocator<void> > TestTwoIntsRequest;

typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsRequest> TestTwoIntsRequestPtr;
typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsRequest const> TestTwoIntsRequestConstPtr;


template <class ContainerAllocator>
struct TestTwoIntsResponse_ : public ros::Message
{
  typedef TestTwoIntsResponse_<ContainerAllocator> Type;

  TestTwoIntsResponse_()
  : sum(0)
  {
  }

  TestTwoIntsResponse_(const ContainerAllocator& _alloc)
  : sum(0)
  {
  }

  typedef int32_t _sum_type;
  int32_t sum;


private:
  static const char* __s_getDataType_() { return "higgs_arduino_java/TestTwoIntsResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "0ba699c25c9418c0366f3595c0c8e8ec"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "f0b6d69ea10b0cf210cb349d58d59e8f"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int32 sum\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, sum);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, sum);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(sum);
    return size;
  }

  typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct TestTwoIntsResponse
typedef  ::higgs_arduino_java::TestTwoIntsResponse_<std::allocator<void> > TestTwoIntsResponse;

typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsResponse> TestTwoIntsResponsePtr;
typedef boost::shared_ptr< ::higgs_arduino_java::TestTwoIntsResponse const> TestTwoIntsResponseConstPtr;

struct TestTwoInts
{

typedef TestTwoIntsRequest Request;
typedef TestTwoIntsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct TestTwoInts
} // namespace higgs_arduino_java

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ef8322123148e475e3e93a1f609b2f70";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xef8322123148e475ULL;
  static const uint64_t static_value2 = 0xe3e93a1f609b2f70ULL;
};

template<class ContainerAllocator>
struct DataType< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "higgs_arduino_java/TestTwoIntsRequest";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 a\n\
int32 b\n\
\n\
";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "0ba699c25c9418c0366f3595c0c8e8ec";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x0ba699c25c9418c0ULL;
  static const uint64_t static_value2 = 0x366f3595c0c8e8ecULL;
};

template<class ContainerAllocator>
struct DataType< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "higgs_arduino_java/TestTwoIntsResponse";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 sum\n\
\n\
\n\
";
  }

  static const char* value(const  ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.a);
    stream.next(m.b);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TestTwoIntsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.sum);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct TestTwoIntsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<higgs_arduino_java::TestTwoInts> {
  static const char* value() 
  {
    return "f0b6d69ea10b0cf210cb349d58d59e8f";
  }

  static const char* value(const higgs_arduino_java::TestTwoInts&) { return value(); } 
};

template<>
struct DataType<higgs_arduino_java::TestTwoInts> {
  static const char* value() 
  {
    return "higgs_arduino_java/TestTwoInts";
  }

  static const char* value(const higgs_arduino_java::TestTwoInts&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f0b6d69ea10b0cf210cb349d58d59e8f";
  }

  static const char* value(const higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "higgs_arduino_java/TestTwoInts";
  }

  static const char* value(const higgs_arduino_java::TestTwoIntsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f0b6d69ea10b0cf210cb349d58d59e8f";
  }

  static const char* value(const higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "higgs_arduino_java/TestTwoInts";
  }

  static const char* value(const higgs_arduino_java::TestTwoIntsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // HIGGS_ARDUINO_JAVA_SERVICE_TESTTWOINTS_H

